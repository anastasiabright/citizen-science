runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
View(oddpub_journal)
View(oddpub_journal)
View(oddpub_journal)
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
journals <- data |> distinct(publisher)
distinct(oddpub_journal$publisher)
library(dplyr)
distinct(oddpub_journal$publisher)
distinct(oddpub_journal,publisher)
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
output$plot_open_code_line <- renderPlotly({
data_open_code <- data_open_code_journals_line() #total_perc = input$checkbox_perc
plot_open_code_journal_line(data_open_code)
#min = input$year[1],
#max= input$year[2],
#total_perc = input$checkbox_perc,
#institut = input$select_inst)
}
)
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
data_other |>
mutate(
oa_status = case_when(
str_detect(oa_status, "^closed.*") ~ "closed",
str_detect(oa_status, "^gold.*") ~ "gold",
is.na(oa_status) ~ "closed",
TRUE ~ oa_status
)
) |>
mutate(oa_status = factor(oa_status, levels = oa_status_colors[1:5])) |>
mutate(genre = case_when(str_detect(genre, "book-chapter|School book chapter") ~ "Book chapter",
str_detect(genre, "[mM]onografie|[bB]uch|book") ~ "Book",
#str_detect(genre, "[jJ]ournal-article") ~ "Journal article",
str_detect(genre, "conference-paper") ~ "Conference paper",
str_detect(genre, "conference-abstract") ~ "Conference abstract",
TRUE ~ "Other")) |>
count(year, oa_status, institut_ubib, genre) |>
filter(year >= 2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(institut_ubib, year, oa_status, genre, fill = list(n = 0)) |>
group_by(institut_ubib, year, oa_status, genre)
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
data_other |>
mutate(
oa_status = case_when(
str_detect(oa_status, "^closed.*") ~ "closed",
str_detect(oa_status, "^gold.*") ~ "gold",
is.na(oa_status) ~ "closed",
TRUE ~ oa_status
)
) |>
mutate(oa_status = factor(oa_status, levels = oa_status_colors[1:5])) |>
mutate(genre = case_when(str_detect(genre, "book-chapter|School book chapter") ~ "Book chapter",
str_detect(genre, "[mM]onografie|[bB]uch|book") ~ "Book",
#str_detect(genre, "[jJ]ournal-article") ~ "Journal article",
str_detect(genre, "conference-paper") ~ "Conference paper",
str_detect(genre, "conference-abstract") ~ "Conference abstract",
TRUE ~ "Other")) |>
count(year, oa_status, institut_ubib, genre) |>
filter(year >= 2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(institut_ubib, year, oa_status, genre, fill = list(n = 0)) |>
group_by(institut_ubib, year, oa_status, genre)
data_other |>
mutate(
oa_status = case_when(
str_detect(oa_status, "^closed.*") ~ "closed",
str_detect(oa_status, "^gold.*") ~ "gold",
is.na(oa_status) ~ "closed",
TRUE ~ oa_status
)
) |>
mutate(oa_status = factor(oa_status, levels = oa_status_colors[1:5])) |>
mutate(genre = case_when(str_detect(genre, "book-chapter|School book chapter") ~ "Book chapter",
str_detect(genre, "[mM]onografie|[bB]uch|book") ~ "Book",
#str_detect(genre, "[jJ]ournal-article") ~ "Journal article",
str_detect(genre, "conference-paper") ~ "Conference paper",
str_detect(genre, "conference-abstract") ~ "Conference abstract",
TRUE ~ "Other")) |>
count(year, oa_status, institut_ubib, genre) |>
filter(year >= 2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(institut_ubib, year, oa_status, genre, fill = list(n = 0))
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
data_other |>
drop_na(institut_ubib) |>
mutate(license = str_to_lower(license)) |>
mutate(license = case_when(!str_detect(license, "^cc.*") ~ "other license",
is.na(license) ~ "no license",
TRUE ~ license)) |>
#select(-genre, -year) |>
mutate(license = factor(
license,
levels = c(
"cc-by",
"cc-by-sa",
"cc-by-nc",
"cc-by-nc-sa",
"cc-by-nd",
"cc-by-nc-nd",
"cc0",
"other license"
#"no license"
)
)) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
count(year, license,  institut_ubib) |>
filter(year >=2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(institut_ubib, year, license, fill = list(n = 0)) |> # year on 2
group_by(institut_ubib, year, license) |> #year on 1
mutate(total_count = sum(n)) %>%
filter(total_count != 0) %>%
mutate(perc = n / total_count) %>%
ungroup()
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
oddpub_journal |>
drop_na(is_open_data) |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
mutate(institut_short = str_extract_all(institut_ubib,  "(?<=\\().+?(?=\\))")) |>
mutate(institut_short = factor(institut_short, levels = c("WE 1", "WE 2", "WE 3"))) |>
mutate(year = as.numeric(year)) |>
mutate(open_data_category_priority = (open_data_category %>% (function(x)
x %>% str_split(",") %>% map_chr(head, 1)))) |>
#filter(institut_ubib %in% institut) |>
group_by(year) |> #,, institut_short , is_open_data, .groups = "drop"
summarize(is_open_data_count = sum(is_open_data == "TRUE", na.rm = TRUE),
open_data_disc = sum(open_data_category_priority == "field-specific repository",
na.rm = TRUE),
open_data_gener = sum(open_data_category_priority == "general-purpose repository",
na.rm = TRUE),
open_data_supplement = sum(open_data_category_priority == "supplement", na.rm = TRUE),
total = sum(!is.na(is_open_data))) |>
#group_by(year, .groups = "drop") |>
mutate(is_open_data_perc = round(is_open_data_count/total * 100, 1),
open_data_disc_perc = round(open_data_disc/total * 100, 1),
open_data_gener_perc = round(open_data_gener/total * 100, 1),
open_data_supplement_perc = round(open_data_supplement/total * 100, 1))|>
#count(year, institut_ubib, publisher) |> #is_open_data,
#filter(is_open_data == TRUE) |>
filter(year >=2016)
oddpub_journal |>
drop_na(is_open_data) |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
mutate(year = as.numeric(year)) |>
mutate(open_data_category_priority = (open_data_category %>% (function(x)
x %>% str_split(",") %>% map_chr(head, 1)))) |>
#filter(institut_ubib %in% institut) |>
group_by(year) |> #,, institut_short , is_open_data, .groups = "drop"
summarize(is_open_data_count = sum(is_open_data == "TRUE", na.rm = TRUE),
open_data_disc = sum(open_data_category_priority == "field-specific repository",
na.rm = TRUE),
open_data_gener = sum(open_data_category_priority == "general-purpose repository",
na.rm = TRUE),
open_data_supplement = sum(open_data_category_priority == "supplement", na.rm = TRUE),
total = sum(!is.na(is_open_data))) |>
#group_by(year, .groups = "drop") |>
mutate(is_open_data_perc = round(is_open_data_count/total * 100, 1),
open_data_disc_perc = round(open_data_disc/total * 100, 1),
open_data_gener_perc = round(open_data_gener/total * 100, 1),
open_data_supplement_perc = round(open_data_supplement/total * 100, 1))|>
mutate(institut_short = str_extract_all(institut_ubib,  "(?<=\\().+?(?=\\))")) |>
mutate(institut_short = factor(institut_short, levels = c("WE 1", "WE 2", "WE 3"))) |>
#count(year, institut_ubib, publisher) |> #is_open_data,
#filter(is_open_data == TRUE) |>
filter(year >=2016)
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
plot_open_data_journal_horiz <- function(data, institut) {
data |>
plot_ly(x = ~`FALSE`, y = ~year, type = 'funnel', name = "Open Data FALSE",
marker = list(color = color[1])) |> #orientation = 'h'
add_trace(x = ~`TRUE`, name = "Open Data TRUE",
marker = list(color = color[2])) |> #orientation = 'h',
layout(#barmode = 'overlay',
legend = list(xanchor = "left"),
xaxis = list(title = '<b>Open Data Counts</b>'),
#yaxis = list(title = '<b>Year</b>', dtick = 1, autorange = "reversed"),
paper_bgcolor = "#DCE3E5",
plot_bgcolor = "#DCE3E5") %>%
config(displayModeBar = FALSE)
}
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
#mutate(year = as.numeric(year)) |>
count(is_open_data, year, institut_ubib) |>
filter(year >=2016)
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
#mutate(year = as.numeric(year)) |>
count(is_open_data, year) |> #, institut_ubib
filter(year >=2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(institut_ubib, year, is_open_data, fill = list(n = 0))
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
#mutate(year = as.numeric(year)) |>
count(is_open_data, year) |> #, institut_ubib
filter(year >=2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(year, is_open_data, fill = list(n = 0))
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
#mutate(year = as.numeric(year)) |>
count(is_open_data, year) |> #, institut_ubib
filter(year >=2016) |>
# mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
# mutate(institut_ubib = str_trim(institut_ubib)) |>
# mutate(institut_ubib = factor(
#   institut_ubib,
#   levels = c(
#     "Geologische Wissenschaften (WE 1)",
#     "Geographische Wissenschaften (WE 2)",
#     "Meteorologie (WE 3)"
#   )
# )) |>
tidyr::complete(year, is_open_data, fill = list(n = 0)) |> #institut_ubib,
mutate(institut_short = str_extract_all(institut_ubib,  "(?<=\\().+?(?=\\))")) |>
mutate(institut_short = factor(institut_short, levels = c("WE 1", "WE 2", "WE 3"))) |>
mutate(is_open_data = factor(is_open_data, levels = c("FALSE", "TRUE"))) |>
pivot_wider(names_from = is_open_data, values_from = n) |>
filter(`FALSE` > 0 | `TRUE` > 0)
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
#mutate(year = as.numeric(year)) |>
count(is_open_data, year) |> #, institut_ubib
filter(year >=2016) |>
# mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
# mutate(institut_ubib = str_trim(institut_ubib)) |>
# mutate(institut_ubib = factor(
#   institut_ubib,
#   levels = c(
#     "Geologische Wissenschaften (WE 1)",
#     "Geographische Wissenschaften (WE 2)",
#     "Meteorologie (WE 3)"
#   )
# )) |>
tidyr::complete(year, is_open_data, fill = list(n = 0)) |> #institut_ubib,
# mutate(institut_short = str_extract_all(institut_ubib,  "(?<=\\().+?(?=\\))")) |>
# mutate(institut_short = factor(institut_short, levels = c("WE 1", "WE 2", "WE 3"))) |>
mutate(is_open_data = factor(is_open_data, levels = c("FALSE", "TRUE"))) |>
pivot_wider(names_from = is_open_data, values_from = n) |>
filter(`FALSE` > 0 | `TRUE` > 0)
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
mutate(year = as.numeric(year)) |>
mutate(is_open_data = factor(is_open_data, levels = c("TRUE","FALSE")))
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
oddpub_journal |>
drop_na(institut_ubib) |>
mutate(
institut_ubib = case_when(
institut_ubib == "Institut für Weltraumwissenschaften" ~ "Institut für Meteorologie (WE 3)",
TRUE ~ institut_ubib
)
) |>
mutate(year = as.numeric(year)) |>
mutate(is_open_data = factor(is_open_data, levels = c("TRUE","FALSE"))) |>
mutate(is_open_data = ifelse(is_open_data == "TRUE", 1, -1)) |>
count(is_open_data, institut_ubib, year) |> #
filter(year >=2016) |>
mutate(institut_ubib = str_remove(institut_ubib, "Institut für")) |>
mutate(institut_ubib = str_trim(institut_ubib)) |>
mutate(institut_ubib = factor(
institut_ubib,
levels = c(
"Geologische Wissenschaften (WE 1)",
"Geographische Wissenschaften (WE 2)",
"Meteorologie (WE 3)"
)
)) |>
tidyr::complete(year,institut_ubib, is_open_data, fill = list(n = 0)) |>
mutate(institut_short = str_extract_all(institut_ubib,  "(?<=\\().+?(?=\\))")) |>
mutate(institut_short = factor(institut_short, levels = c("WE 1", "WE 2", "WE 3"))) |>
pivot_wider(names_from = is_open_data, values_from = n) |>
#filter(`FALSE` > 0 | `TRUE` > 0) |>
mutate(year = as.character(year))
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
?plot_ly
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
shiny::runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/geoscience-dashboard-ana-copy/dashboard')
runApp('C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/cs')
setwd("C:/Users/iarkaeva/Documents/R/BIH_QUEST_Projects/cs")
runApp()
runApp()
